%!PS-Adobe-2.0
%%Creator: dvips(k) 2022.1 (TeX Live 2022)  Copyright 2022 Radical Eye Software
%%Title: job-001.dvi
%%CreationDate: Mon Sep 30 22:44:12 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 156 3039 545 3230
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips job-001.dvi -o job-001.dvips.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.09.30:1544
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2023 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 156819571 221710428 1000 600 600 (job-001.dvi)
@start end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black 706 2154 a @beginspecial
0 @llx 0 @lly 388 @urx 189 @ury 3880 @rwi @setspecial
%%BeginDocument: job-001.fig2dev.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: job-001.fig
%%Creator: fig2dev Version 3.2.8b
%%CreationDate: 2024-09-30 15:44:12
%%BoundingBox: 156 3039 545 3230
%%Magnification: 1.0000
%%EndComments
%%BeginProlog
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def

end

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/rl {rlineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/xfig_image {image Data flushfile} def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
sa
n 0 189 m 0 0 l 388 0 l 388 189 l cp clip
20.8 188.0 tr
1 -1 sc
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
7.500 slw
n 270 270 m 360 270 l 360 360 l 270 360 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 360 360 m 450 360 l 450 450 l 360 450 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 450 450 m 540 450 l 540 540 l 450 540 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 540 540 m 630 540 l 630 630 l 540 630 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 0 0 m 90 0 l 90 90 l 0 90 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 90 90 m 180 90 l 180 180 l 90 180 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 180 180 m 270 180 l 270 270 l 180 270 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 630 630 m 720 630 l 720 720 l 630 720 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 720 720 m 810 720 l 810 810 l 720 810 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 810 810 m 900 810 l 900 900 l 810 900 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1170 1170 m 1260 1170 l 1260 1260 l 1170 1260 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1260 1260 m 1350 1260 l 1350 1350 l 1260 1350 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1350 1350 m 1440 1350 l 1440 1440 l 1350 1440 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1440 1440 m 1530 1440 l 1530 1530 l 1440 1530 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 900 900 m 990 900 l 990 990 l 900 990 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 990 990 m 1080 990 l 1080 1080 l 990 1080 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1080 1080 m 1170 1080 l 1170 1170 l 1080 1170 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1530 1530 m 1620 1530 l 1620 1620 l 1530 1620 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1620 1620 m 1710 1620 l 1710 1710 l 1620 1710 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1710 1710 m 1800 1710 l 1800 1800 l 1710 1800 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2070 2070 m 2160 2070 l 2160 2160 l 2070 2160 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2160 2160 m 2250 2160 l 2250 2250 l 2160 2250 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2250 2250 m 2340 2250 l 2340 2340 l 2250 2340 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2340 2340 m 2430 2340 l 2430 2430 l 2340 2430 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1800 1800 m 1890 1800 l 1890 1890 l 1800 1890 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1890 1890 m 1980 1890 l 1980 1980 l 1890 1980 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 1980 1980 m 2070 1980 l 2070 2070 l 1980 2070 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2430 2430 m 2520 2430 l 2520 2520 l 2430 2520 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2520 2520 m 2610 2520 l 2610 2610 l 2520 2610 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2610 2610 m 2700 2610 l 2700 2700 l 2610 2700 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4275 1170 m 4365 1170 l 4365 1260 l 4275 1260 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4365 1260 m 4455 1260 l 4455 1350 l 4365 1350 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4455 1350 m 4545 1350 l 4545 1440 l 4455 1440 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4545 1440 m 4635 1440 l 4635 1530 l 4545 1530 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4005 900 m 4095 900 l 4095 990 l 4005 990 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4095 990 m 4185 990 l 4185 1080 l 4095 1080 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4185 1080 m 4275 1080 l 4275 1170 l 4185 1170 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4635 1530 m 4725 1530 l 4725 1620 l 4635 1620 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4725 1620 m 4815 1620 l 4815 1710 l 4725 1710 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4815 1710 m 4905 1710 l 4905 1800 l 4815 1800 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5175 2070 m 5265 2070 l 5265 2160 l 5175 2160 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5265 2160 m 5355 2160 l 5355 2250 l 5265 2250 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5355 2250 m 5445 2250 l 5445 2340 l 5355 2340 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5445 2340 m 5535 2340 l 5535 2430 l 5445 2430 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4905 1800 m 4995 1800 l 4995 1890 l 4905 1890 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4995 1890 m 5085 1890 l 5085 1980 l 4995 1980 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5085 1980 m 5175 1980 l 5175 2070 l 5085 2070 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5535 2430 m 5625 2430 l 5625 2520 l 5535 2520 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5625 2520 m 5715 2520 l 5715 2610 l 5625 2610 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 5715 2610 m 5805 2610 l 5805 2700 l 5715 2700 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3375 270 m 3465 270 l 3465 360 l 3375 360 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3465 360 m 3555 360 l 3555 450 l 3465 450 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3555 450 m 3645 450 l 3645 540 l 3555 540 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3645 540 m 3735 540 l 3735 630 l 3645 630 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3105 0 m 5805 0 l 5805 2700 l 3105 2700 l
 cp gs col0 s gr % Polyline
n 3105 0 m 3195 0 l 3195 90 l 3105 90 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3195 90 m 3285 90 l 3285 180 l 3195 180 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3285 180 m 3375 180 l 3375 270 l 3285 270 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3735 630 m 3825 630 l 3825 720 l 3735 720 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3825 720 m 3915 720 l 3915 810 l 3825 810 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 3915 810 m 4005 810 l 4005 900 l 3915 900 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4635 1530 m 5175 1530 l 5175 2070 l 4635 2070 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 4635 0 m 5175 0 l 5175 2700 l 4635 2700 l
 cp gs col0 s gr % Polyline
n 3105 1530 m 5805 1530 l 5805 2070 l 3105 2070 l
 cp gs col0 s gr /Times-Roman ff 180.00 scf sf
4230 2970 m
gs 1 -1 sc (stiffness) col0 sh gr
/Times-Roman ff 180.00 scf sf
3240 1845 m
gs 1 -1 sc (attachment) col0 sh gr
% Polyline
n 0 0 m 2700 0 l 2700 2700 l 0 2700 l
 cp gs col0 s gr % Polyline
n 2070 2700 m 1530 2700 l 1530 0 l 2070 0 l
 cp gs col7 0.00 shd ef gr gs col0 s gr % Polyline
n 2700 1530 m 0 1530 l 0 2070 l 2700 2070 l
 cp gs col7 0.00 shd ef gr gs col0 s gr /Times-Roman ff 180.00 scf sf
1125 2970 m
gs 1 -1 sc (mass) col0 sh gr
/Times-Roman ff 180.00 scf sf
-315 990 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman ff 180.00 scf sf
-315 2295 m
gs 1 -1 sc (B) col0 sh gr
% here ends figure;
pagefooter
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
